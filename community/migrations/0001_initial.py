# Generated by Django 5.2.7 on 2025-10-22 22:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Post title', max_length=200)),
                ('content', models.TextField(help_text='Post content')),
                ('post_type', models.CharField(choices=[('question', 'Question'), ('experience', 'Interview Experience'), ('advice', 'Career Advice'), ('discussion', 'Discussion')], default='discussion', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization')),
                ('is_anonymous', models.BooleanField(default=False, help_text='Post anonymously')),
                ('is_pinned', models.BooleanField(default=False, help_text='Pin to top of community')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Community Post',
                'verbose_name_plural': 'Community Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Comment content')),
                ('is_anonymous', models.BooleanField(default=False, help_text='Comment anonymously')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='community.communitypost')),
            ],
            options={
                'verbose_name': 'Community Comment',
                'verbose_name_plural': 'Community Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MentorshipRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(help_text='Mentorship topic/area', max_length=200)),
                ('message', models.TextField(help_text='Introduction message')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentorship_requests_sent', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentorship_requests_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mentorship Request',
                'verbose_name_plural': 'Mentorship Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Resource title', max_length=200)),
                ('description', models.TextField(help_text='Resource description')),
                ('resource_type', models.CharField(choices=[('article', 'Article'), ('video', 'Video'), ('course', 'Course'), ('book', 'Book'), ('tool', 'Tool'), ('other', 'Other')], max_length=20)),
                ('url', models.URLField(help_text='Resource URL')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization')),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_resources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resource Share',
                'verbose_name_plural': 'Resource Shares',
                'ordering': ['-created_at'],
            },
        ),
    ]
